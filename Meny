import java.awt.Color;

public class Meny {
	SimpleWindowMod w;
	boolean bot;
	private int dir1 = 0, dir2 = 0;

	public Meny(SimpleWindowMod w) {
		this.w = w;
	}

	public void welcome() {
		w.clear();
		while (true) {
			Rectangle[] rec = new Rectangle[6];
			rec[0] = new Rectangle(w.getWidth() / 2, w.getHeight() / 2, 100, 15); //Starta
			rec[1] = new Rectangle(w.getWidth() / 2, w.getHeight() / 2 + 20, 100, 15); //Instruktioner
			rec[2] = new Rectangle(w.getWidth() / 2, w.getHeight() / 2 + 40, 100, 15); //Options
			rec[3] = new Rectangle(w.getWidth() / 2, w.getHeight() / 2 + 60, 100, 15); //Avsluta
			rec[4] = new Rectangle(w.getWidth() / 2, w.getHeight() / 2, 100, 15); //Bot
			rec[5] = new Rectangle(w.getWidth() / 2, w.getHeight() / 2 + 100, 100, 15); //Tillbaka
			rec[0].draw(w);
			rec[1].draw(w);
			rec[2].draw(w);
			rec[3].draw(w);


			w.moveTo(rec[0].getX() + 5, rec[0].getY() + 12);
			w.writeText("Starta Spelet");
			//Pennan skriver "Start Spelet" i fönstret.

			w.moveTo(rec[1].getX() + 5, rec[1].getY() + 12);
			w.writeText("Instruktioner");
			//Pennan skriver "Instruktioner" i fönstret.

			w.moveTo(rec[2].getX() + 5, rec[2].getY() + 12);
			w.writeText("Options");
			//Pennan skriver "Options" i fönstret.

			w.moveTo(rec[3].getX() + 5, rec[3].getY() + 12);
			w.writeText("Avsluta");

			w.waitForMouseClick();
			int x = w.getMouseX(), y = w.getMouseY();


			if (x >= rec[0].getX() && (x <= (rec[0].getX() + rec[0].getWidth())) && (y >= rec[0].getY() && (y <= (rec[0].getY() + rec[0].getHeight())))) {
				spel();
			}

			if (x >= rec[1].getX() && (x <= (rec[1].getX() + rec[1].getWidth())) && (y >= rec[1].getY() && (y <= (rec[1].getY() + rec[1].getHeight())))) {
				instruktioner(rec);
			}

			if (x >= rec[2].getX() && (x <= (rec[2].getX() + rec[2].getWidth())) && (y >= rec[2].getY() && (y <= (rec[2].getY() + rec[2].getHeight())))) {
				options(rec);
			}

			if (x >= rec[3].getX() && (x <= (rec[3].getX() + rec[3].getWidth())) && (y >= rec[3].getY() && (y <= (rec[3].getY() + rec[3].getHeight())))) {
				System.exit(0);
			}
		}
	}

	private void options(Rectangle rec[]) {
		w.clear();
		while (true) {
			w.setLineColor(Color.BLACK);
			rec[4].draw(w);
			rec[5].draw(w);
			w.moveTo(rec[4].getX() + 20, rec[4].getY() + 11);
			w.writeText("Stäng av bot");
			w.moveTo(rec[5].getX() + 20, rec[5].getY() + 11);
			w.writeText("Tillbaka");

			w.waitForMouseClick();
			int x = w.getMouseX(), y = w.getMouseY();

			if (x >= rec[5].getX() && x <= rec[5].getX() + rec[5].getWidth() && y >= rec[5].getY() && y <= rec[5].getY() + rec[5].getHeight()){
				welcome();
			}

			if (x >= rec[4].getX() && x <= rec[4].getX() + rec[4].getWidth() && y >= rec[4].getY() && y <= rec[4].getY() + rec[4].getHeight()){
				bot = !bot;
			}
			w.clear();        
			if (bot){
				w.moveTo(rec[4].getX() + 110, rec[4].getY() + 10);
				w.writeText("Lmao bot avstängd");
			}

			if (!bot){
				w.moveTo(rec[4].getX() + 110, rec[4].getY() + 10);
				w.writeText("Lmao bot på");
			}            
		}
	}
	private void instruktioner(Rectangle rec[]){
		w.clear();
		while (true){
			w.setLineColor(Color.BLACK);
			rec[5].draw(w);
			w.moveTo(w.getWidth() / 2, w.getHeight() / 2 - 50);
			w.writeText("Default spelar du mot bot. Se Options.");
			w.moveTo(w.getWidth() / 2, w.getHeight() / 2);
			w.writeText("Du flyttar högra paddeln med i och k.");
			w.moveTo(w.getWidth() / 2, w.getHeight() / 2 + 10);
			w.writeText("den vänstra w och s ( Upp och Ner )");
			w.moveTo(rec[5].getX() + 20, rec[5].getY() + 11);
			w.writeText("Tillbaka");

			w.waitForMouseClick();
			int x = w.getMouseX(), y = w.getMouseY();

			if (x >= rec[5].getX() && x <= rec[5].getX() + rec[5].getWidth() && y >= rec[5].getY() && y <= rec[5].getY() + rec[5].getHeight()){
				welcome();
			}
		}
	}
	private void spel(){
		Rectangle l = new Rectangle(0, 0, 30, 120);
		Rectangle r = new Rectangle(w.getWidth(), 0, -30, 120);
		Circle c = new Circle(w.getWidth() / 2, w.getHeight() / 2, 30);
		int mX = 4, mY = -2;
		while (true) {
			w.clear();
			w.moveTo(w.getWidth() / 2, 0);
			w.lineTo(w.getWidth() / 2, w.getHeight());
			r.draw(w);
			l.draw(w);
			c.draw(w);

			c.move(mX, mY);

			w.waitForEvent();
			switch (w.getKey()) {
			case 'w': dir1 = 1;
			break;
			case 's': dir1 = 2;
			break;
			case 'o': dir2 = 1;
			break;
			case 'l': dir2 = 2;
			break;
			}


			if (dir2 > 0) {
				if (r.getY() - 2 > 0 && dir2 == 1)
					r.move(0, -5);
				else if (r.getY() + 4 + r.getHeight() <= w.getHeight() && dir2 == 2)
					r.move(0, 5);
			}
			if (dir1 > 0) {
				if (l.getY() - 2 > 0 && dir1 == 1)
					l.move(0, -5);
				else if (l.getY() + 4 + l.getHeight() <= w.getHeight() && dir1 == 2)
					l.move(0, 5);
			}

			if (c.getX() + c.getR() < r.getX() + r.getWidth() && c.getY() <= r.getY() + r.getHeight() && c.getY() + c.getR() >= r.getY()) {
				mX = -mX;
			}

			//Om den träffar nedre eller övre sidan av fönstret.
			if (c.getY() + c.getR() >= w.getHeight() || c.getY() - c.getR() <= 0) {
				mY = -mY;
			}

			//Om den åker utanför vänsterkanten.
			if (c.getX() + c.getR() <= 0){
				c.move(w.getWidth() / 2 - c.getX(), w.getHeight() / 2 - c.getY());
			}

			//Om den åker utanför högerkanten.
			if (c.getX() - c.getR() >= w.getWidth()){
				c.move(w.getWidth() / 2 - c.getX(), w.getHeight() / 2 - c.getY());
			}
		}
	}
}
